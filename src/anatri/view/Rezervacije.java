/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package anatri.view;

import anatri.controller.ObradaRezervacija;
import anatri.model.Operater;
import anatri.model.Osoba;
import anatri.model.Rezervacija;
import anatri.sucelja.TraziDatum;
import anatri.utility.Pomocno;
import java.awt.Color;
import java.awt.Component;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author TryGor
 */
public class Rezervacije extends javax.swing.JFrame implements TraziDatum{
    
    private ObradaRezervacija obradaRezervacija;
    private Rezervacija odabrano;
    private SimpleDateFormat df;
    private String tkoJePozvao;
    private Date postavljeniDP, postavljeniDV;

  
    public Rezervacije() {
        initComponents();
        
        setLocationRelativeTo(null);
        obradaRezervacija = new ObradaRezervacija();
        lista.setModel(new DefaultListModel<Operater>());
       setTitle("Anatri Rent A Car v2.1 Rezervacije: " + 
               Pomocno.getOperater().getImePrezime());
     
        SimpleDateFormat df = new SimpleDateFormat(Pomocno.FORMAT_DATUM);
        datum.setText(df.format(new Date())); 
        SatNit t = new SatNit(datum);
        t.start();
    }

        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        datum = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        akcijaTraziRezervacije = new javax.swing.JButton();
        uvjet = new javax.swing.JTextField();
        ukupnaCijena = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nazivVozila = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cijenaPoDanu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        akcijaDodajNovu = new javax.swing.JButton();
        akcijaPromjeni = new javax.swing.JButton();
        akcijaObrisi = new javax.swing.JButton();
        Boja = new javax.swing.JLabel();
        brojDanaNajma = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        datumPodizanja = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        datumVracanja = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        popust = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        naziv = new javax.swing.JTextField();
        akcijaDatumPodizanja = new javax.swing.JButton();
        akcijaDatumVracanja = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ime = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        prezime = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mjesto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        adresa = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        telefon = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        oib = new javax.swing.JTextField();
        autoriziraj2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        izlaz = new javax.swing.JMenuItem();
        promjenaKorisnika = new javax.swing.JMenuItem();
        pomoc = new javax.swing.JMenu();
        oNama = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Antri Rent A Car - Vozila");

        jToolBar1.setBackground(new java.awt.Color(0, 204, 204));
        jToolBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        datum.setMaximumSize(new java.awt.Dimension(200, 40));
        jToolBar1.add(datum);

        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        akcijaTraziRezervacije.setText("Pretraži");
        akcijaTraziRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziRezervacijeActionPerformed(evt);
            }
        });

        jLabel2.setText("Vozilo");

        jLabel5.setText("Cijena po danu");

        jLabel6.setText("Ukupna Cijena");

        akcijaDodajNovu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/new-.png"))); // NOI18N
        akcijaDodajNovu.setText("Napravi novu");
        akcijaDodajNovu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajNovuActionPerformed(evt);
            }
        });

        akcijaPromjeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/Change.png"))); // NOI18N
        akcijaPromjeni.setText("Promjeni");
        akcijaPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromjeniActionPerformed(evt);
            }
        });

        akcijaObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/trash.png"))); // NOI18N
        akcijaObrisi.setText("Obriši");
        akcijaObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaObrisiActionPerformed(evt);
            }
        });

        Boja.setText("Broj dana najma");

        jLabel1.setText("Datum podizanja");

        datumPodizanja.setEditable(false);

        jLabel3.setText("Datum vraćanja");

        datumVracanja.setEditable(false);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/logo.png"))); // NOI18N

        jLabel7.setText("Uvjet * za ispis svih vozila");

        jLabel8.setText("Popust");

        jLabel9.setText("Naziv rezervacije");

        akcijaDatumPodizanja.setText("Odaberite datum");
        akcijaDatumPodizanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDatumPodizanjaActionPerformed(evt);
            }
        });

        akcijaDatumVracanja.setText("Odaberite datum");
        akcijaDatumVracanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDatumVracanjaActionPerformed(evt);
            }
        });

        jLabel10.setText("Ime klijenta");

        jLabel11.setText("Prezime klijenta");

        jLabel12.setText("Mjesto");

        jLabel13.setText("Adresa");

        jLabel14.setText("Broj Telefona");

        jLabel15.setText("OIB");

        autoriziraj2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/slike/cancel.png"))); // NOI18N
        autoriziraj2.setText("Odustani");
        autoriziraj2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoriziraj2ActionPerformed(evt);
            }
        });

        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Anatri");

        izlaz.setText("Izlaz");
        izlaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izlazActionPerformed(evt);
            }
        });
        jMenu1.add(izlaz);

        promjenaKorisnika.setText("Promijeni korisnika");
        promjenaKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promjenaKorisnikaActionPerformed(evt);
            }
        });
        jMenu1.add(promjenaKorisnika);

        jMenuBar1.add(jMenu1);

        pomoc.setText("Pomoć");
        pomoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pomocActionPerformed(evt);
            }
        });

        oNama.setText("O Nama");
        oNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oNamaActionPerformed(evt);
            }
        });
        pomoc.add(oNama);

        jMenuBar1.add(pomoc);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(akcijaDodajNovu, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(akcijaPromjeni, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(akcijaObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(akcijaTraziRezervacije)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(autoriziraj2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(naziv, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(ukupnaCijena, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addComponent(popust, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(prezime)
                            .addComponent(ime, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(cijenaPoDanu, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(nazivVozila, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mjesto)
                                    .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(telefon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(oib, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(Boja)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(datumVracanja, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(datumPodizanja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)
                                    .addComponent(brojDanaNajma, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(akcijaDatumPodizanja)
                                    .addComponent(akcijaDatumVracanja))))
                        .addGap(25, 25, 25)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(akcijaTraziRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(naziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mjesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(telefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(oib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addGap(13, 13, 13)
                                        .addComponent(prezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2)
                                        .addGap(10, 10, 10)
                                        .addComponent(nazivVozila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Boja)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(brojDanaNajma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(datumPodizanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(akcijaDatumPodizanja))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(datumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(akcijaDatumVracanja)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cijenaPoDanu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ukupnaCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(popust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 70, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(akcijaPromjeni)
                        .addComponent(akcijaDodajNovu))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(akcijaObrisi)
                        .addComponent(autoriziraj2)))
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaTraziRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziRezervacijeActionPerformed
        
        cistiPolja();
        
        List<Rezervacija> rezervacije = obradaRezervacija.
                dohvati(uvjet.getText());
       
        DefaultListModel<Rezervacija> m = new DefaultListModel<>();
        for (Rezervacija rezervacija : rezervacije){
                m.addElement(rezervacija);
        }
        lista.setModel(m);
    }//GEN-LAST:event_akcijaTraziRezervacijeActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
            reset();
        odabrano = (Rezervacija) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        oib.setText(odabrano.getOsoba().getOib());
        ime.setText(odabrano.getOsoba().getIme());
        prezime.setText(odabrano.getOsoba().getPrezime());
        adresa.setText(odabrano.getOsoba().getAdresa());
        mjesto.setText(odabrano.getOsoba().getMjesto());
        telefon.setText(odabrano.getOsoba().getTelefon());
        naziv.setText(String.valueOf(odabrano.getNaziv()));
        nazivVozila.setText(String.valueOf(odabrano.getNazivVozila()));
        cijenaPoDanu.setText(String.valueOf(odabrano.getCijenaPoDanu()));
        ukupnaCijena.setText(String.valueOf(odabrano.getUkupnaCijena()));
        SimpleDateFormat df = new SimpleDateFormat(Pomocno.FORMAT_DATUM_UNOS);
        try {
            datumPodizanja.setText(df.format(odabrano.getDatumPodizanja()));
        } catch (Exception e) {
            datumPodizanja.setText("");
        }
        brojDanaNajma.setText(String.valueOf(odabrano.getBrojDanaNajma()));
                
        try {
            datumVracanja.setText(df.format(odabrano.getDatumVracanja()));
        } catch (Exception e) {
            datumVracanja.setText("");
        }
        popust.setText(String.valueOf(odabrano.getPopust()));
        
        
    }//GEN-LAST:event_listaValueChanged

    private void akcijaDodajNovuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajNovuActionPerformed
         reset();
         if(ime.getText().trim().isEmpty()){
            greska(ime, "Obavezno unijeti ime");
            return;
        }

        if(prezime.getText().trim().isEmpty()){
            greska(prezime, "Obavezno unijeti prezime");
            return;
        }
               
        if(telefon.getText().trim().isEmpty()){
            greska(telefon, "Obavezno unijeti broj telefona");
            return;
        }
        
        if(adresa.getText().trim().isEmpty()){
            greska(adresa, "Obavezno unijeti adresu");
            return;
        }
        
        if(mjesto.getText().trim().isEmpty()){
            greska(mjesto, "Obavezno unijeti mjesto");
            return;
        }

        if(naziv.getText().trim().isEmpty()){
            greska(naziv, "Obavezno unijeti naziv rezervacije");
            return;
        }
        
        if(nazivVozila.getText().trim().isEmpty()){
            greska(nazivVozila, "Obavezno unijeti naziv vozila");
            return;
        }
         if(cijenaPoDanu.getText().trim().isEmpty()){
            greska(cijenaPoDanu, "Obavezno unijeti cijenu najma po danu");
            return;
        }
        if(ukupnaCijena.getText().trim().isEmpty()){
            greska(ukupnaCijena, "Obavezno unijeti ukupnu cijenu");
            return;
        }
       
        if(brojDanaNajma.getText().trim().isEmpty()){
            greska(brojDanaNajma, "Obavezno unijeti broj dana najma");
            return;
        }
        

        Rezervacija o = new Rezervacija();
        o=popuni(o);

        o=obradaRezervacija.dodaj(o);
        /*
        o.setNaziv(naziv.getText().trim());
        o.setNazivVozila(nazivVozila.getText().trim());
        o.setCijenaPoDanu(new BigDecimal(cijenaPoDanu.getText().trim()));
        o.setUkupnaCijena(new BigDecimal(ukupnaCijena.getText().trim()));
        try {
            o.setBrojDanaNajma(Integer.parseInt(brojDanaNajma.getText().trim()));
        } catch (Exception e) {
            greska(brojDanaNajma, "broj nije dobrog formata");
            return;
        }
        
        if(datumPodizanja.getText().trim().length()>0){
        try {
            o.setDatumPodizanja(df.parse(datumPodizanja.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumPodizanja, "datum nije dobrog formata");
            return;
        }
        }else{
            o.setDatumPodizanja(null);
        
                }*/
       // o.setDatumPodizanja(postavljeniDP);
        /*
       if(datumVracanja.getText().trim().length()>0){
        try {
            o.setDatumPodizanja(df.parse(datumVracanja.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumVracanja, "datum nije dobrog formata");
            return;
        }
        }else{
            o.setDatumPodizanja(null);
        }
        
        o.setDatumVracanja(postavljeniDV);
        o.setPopust(new BigDecimal(popust.getText().trim()));
       
        o=obradaRezervacija.dodaj(o);
*/
        DefaultListModel<Rezervacija> m =(DefaultListModel<Rezervacija>) lista.getModel();
        m.addElement(o);
    }//GEN-LAST:event_akcijaDodajNovuActionPerformed

    private void akcijaPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromjeniActionPerformed
        if(odabrano==null){
            return;
        }
        reset();
        //kontorle
        if(ime.getText().trim().isEmpty()){
            greska(ime, "Obavezno unijeti ime");
            return;
        }

        if(prezime.getText().trim().isEmpty()){
            greska(prezime, "Obavezno unijeti prezime");
            return;
         }
                
        if(telefon.getText().trim().isEmpty()){
            greska(telefon, "Obavezno unijeti broj telefona");
            return;
        }
        
        if(adresa.getText().trim().isEmpty()){
            greska(adresa, "Obavezno unijeti adresu");
            return;
        }
        
        if(mjesto.getText().trim().isEmpty()){
            greska(mjesto, "Obavezno unijeti mjesto");
            return;
        }
        if(naziv.getText().trim().isEmpty()){
            greska(naziv, "Obavezno unijeti naziv rezervacije");
            return;
        }
        
        if(nazivVozila.getText().trim().isEmpty()){
            greska(nazivVozila, "Obavezno unijeti naziv vozila");
            return;
        }
         if(cijenaPoDanu.getText().trim().isEmpty()){
            greska(cijenaPoDanu, "Obavezno unijeti cijenu najma po danu");
            return;
        }
        if(ukupnaCijena.getText().trim().isEmpty()){
            greska(ukupnaCijena, "Obavezno unijeti ukupnu cijenu");
            return;
        }
       
        if(brojDanaNajma.getText().trim().isEmpty()){
            greska(brojDanaNajma, "Obavezno unijeti broj dana najma");
            return;
        }
        //odabrano.setNaziv(naziv.getText().trim());
        //odabrano.setNazivVozila(nazivVozila.getText().trim());
       // odabrano.setCijenaPoDanu(new BigDecimal(cijenaPoDanu.getText()));
       // odabrano.setUkupnaCijena(new BigDecimal(ukupnaCijena.getText()));
       // odabrano.setDatumPodizanja(postavljeniDP);
        //odabrano.setDatumVracanja(postavljeniDV);
        /*if(datumPodizanja.getText().trim().length()>0){
        try {
            odabrano.setDatumPodizanja(df.parse(datumPodizanja.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumPodizanja, "datum nije dobrog formata");
            return;
        }
        }else{
            odabrano.setDatumPodizanja(null);
        }
        
        if(datumVracanja.getText().trim().length()>0){
        try {
            odabrano.setDatumVracanja(df.parse(datumVracanja.getText().trim().replace(" ","")));
        } catch (Exception e) {
            greska(datumVracanja, "datum nije dobrog formata");
            return;
        }
        }else{
            odabrano.setDatumPodizanja(null);
        }*/
         try {
            odabrano.setBrojDanaNajma(Integer.parseInt(brojDanaNajma.getText().trim()));
        } catch (Exception e) {
            greska(brojDanaNajma, "broj nije dobrog formata");
            return;
        }
         odabrano=popuni(odabrano);
        //promjena u bazi
        if(!obradaRezervacija.promjeni(odabrano)){
            return;
        }

        //dodavanje/postavljanje
        //nekada ne radi dobro
        lista.repaint();
    }//GEN-LAST:event_akcijaPromjeniActionPerformed

    private void akcijaObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaObrisiActionPerformed
        odabrano = (Rezervacija) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        if(JOptionPane.showConfirmDialog(getParent(), "Jeste li sigurni da želite obrisati " + odabrano.getNaziv()+ "?","Brisanje rezervacije",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)==JOptionPane.NO_OPTION){
            return;
        }

        if(!obradaRezervacija.obrisi(odabrano)){
            return;
        }

        DefaultListModel<Rezervacija> m = (DefaultListModel<Rezervacija>) lista.getModel();
        m.removeElement(odabrano);
        lista.repaint();
        cistiPolja();
    }//GEN-LAST:event_akcijaObrisiActionPerformed

    private void akcijaDatumPodizanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDatumPodizanjaActionPerformed
      tkoJePozvao="DatumPodizanja";
      Kalendar kalendar = new Kalendar(this);
      kalendar.setVisible(true);
    }//GEN-LAST:event_akcijaDatumPodizanjaActionPerformed

    private void akcijaDatumVracanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDatumVracanjaActionPerformed
      tkoJePozvao="DatumVracanja";
      Kalendar kalendar = new Kalendar(this);
      kalendar.setVisible(true);
    }//GEN-LAST:event_akcijaDatumVracanjaActionPerformed

    private void izlazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izlazActionPerformed
        dispose();
    }//GEN-LAST:event_izlazActionPerformed

    private void promjenaKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promjenaKorisnikaActionPerformed
        new Autorizacija().setVisible(true);
        dispose();
    }//GEN-LAST:event_promjenaKorisnikaActionPerformed

    private void oNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oNamaActionPerformed
        new Onama().setVisible(true);
        dispose();
    }//GEN-LAST:event_oNamaActionPerformed

    private void pomocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pomocActionPerformed
        System.out.println("Krećem");
        new Onama().setVisible(true);
    }//GEN-LAST:event_pomocActionPerformed

    private void autoriziraj2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoriziraj2ActionPerformed
       
        dispose();
    }//GEN-LAST:event_autoriziraj2ActionPerformed
       private Rezervacija popuni(Rezervacija o){
        o.setOsoba(new Osoba());
        o.getOsoba().setIme(ime.getText());
        o.getOsoba().setOib(oib.getText());
        o.getOsoba().setPrezime(prezime.getText());
        o.getOsoba().setAdresa(adresa.getText());
        o.getOsoba().setTelefon(telefon.getText());
        o.getOsoba().setMjesto(mjesto.getText());
        o.setNaziv(naziv.getText().trim());
        o.setNazivVozila(nazivVozila.getText().trim());
        o.setCijenaPoDanu(new BigDecimal(cijenaPoDanu.getText().trim()));
        o.setUkupnaCijena(new BigDecimal(ukupnaCijena.getText().trim()));
        try {
            o.setBrojDanaNajma(Integer.parseInt(brojDanaNajma.getText().trim()));
        } catch (Exception e) {
            greska(brojDanaNajma, "broj nije dobrog formata");
            return null;
        }
        o.setDatumPodizanja(postavljeniDP);
        o.setDatumVracanja(postavljeniDV);
        try{
             o.setPopust(new BigDecimal(popust.getText().trim()));
        }catch(Exception e){
             o.setPopust(BigDecimal.ZERO);
        }
       
       
        o=obradaRezervacija.dodaj(o);
 
        return o;
    }
    
    private void cistiPolja(){
        ime.setText("");
        prezime.setText("");
        adresa.setText("");
        mjesto.setText("");
        telefon.setText("");
        naziv.setText("");
        nazivVozila.setText("");
        cijenaPoDanu.setText("");
        datumPodizanja.setText("");
        ukupnaCijena.setText("");
        brojDanaNajma.setText("");
        ukupnaCijena.setText("");
        datumVracanja.setText("");
        oib.setText("");
    }
     private void reset() {
       
        for (Component c : this.getContentPane().getComponents()) {
            if (c instanceof JTextField || c instanceof JPasswordField){
                JComponent jc = (JComponent) c;
                jc.setBackground(Color.white);
                jc.setToolTipText("");
            }
        }
    }
      private void greska(JComponent komponenta, String obavijest){
           komponenta.setBackground(Color.red);
           komponenta.requestFocus();
           komponenta.setToolTipText(obavijest);
           
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Boja;
    private javax.swing.JTextField adresa;
    private javax.swing.JButton akcijaDatumPodizanja;
    private javax.swing.JButton akcijaDatumVracanja;
    private javax.swing.JButton akcijaDodajNovu;
    private javax.swing.JButton akcijaObrisi;
    private javax.swing.JButton akcijaPromjeni;
    private javax.swing.JButton akcijaTraziRezervacije;
    private javax.swing.JButton autoriziraj2;
    private javax.swing.JTextField brojDanaNajma;
    private javax.swing.JTextField cijenaPoDanu;
    private javax.swing.JLabel datum;
    private javax.swing.JTextField datumPodizanja;
    private javax.swing.JTextField datumVracanja;
    private javax.swing.JTextField ime;
    private javax.swing.JMenuItem izlaz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JList lista;
    private javax.swing.JTextField mjesto;
    private javax.swing.JTextField naziv;
    private javax.swing.JTextField nazivVozila;
    private javax.swing.JMenuItem oNama;
    private javax.swing.JTextField oib;
    private javax.swing.JMenu pomoc;
    private javax.swing.JTextField popust;
    private javax.swing.JTextField prezime;
    private javax.swing.JMenuItem promjenaKorisnika;
    private javax.swing.JTextField telefon;
    private javax.swing.JTextField ukupnaCijena;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables
@Override
    public void setDatum(Date datum) {
         SimpleDateFormat df =new SimpleDateFormat(Pomocno.FORMAT_DATUM);
         if(tkoJePozvao.equals("DatumPodizanja")){
             if(odabrano==null){
                 }else{ 
                    datumPodizanja.setText(df.format(datum));
                        return;
             }
              
        datumPodizanja.setText(df.format(datum));
            postavljeniDP=datum;
        }else{
            datumVracanja.setText(df.format(datum));
            postavljeniDV=datum;
        }
    }

    @Override
    public Date getDatum() {
       
        if(odabrano==null){
            return null;
        }
        if(tkoJePozvao.equals("DatumPodizanja")){
            //greska(datumPodizanja, "Obavezno unijeti datum podizanja vozila");
            
            return odabrano.getDatumPodizanja();
        }else{
            //greska(datumVracanja, "Obavezno unijeti datum vraćanja vozila");
            return odabrano.getDatumVracanja();
        }
    }
}

   /* 
    @Override
    public void setDatum(Date datum) {
         SimpleDateFormat df =new SimpleDateFormat(Pomocno.FORMAT_DATUM);
        
         if(tkoJePozvao.equals("DatumPodizanja")){
          
            if(odabrano==null){
            }else{ 
            datumPodizanja.setText(df.format(datum));
            return;
        }
            
        datumPodizanja.setText(df.format(datum));
        postavljeniDP=datum;
                     
             if(odabrano==null){
             }else{ 
            datumVracanja.setText(df.format(datum));    
            return;
        }
             
              datumVracanja.setText(df.format(datum));
            postavljeniDV=datum;
        }
    }

    @Override
    public Date getDatum() {
        
        if(odabrano==null){
            return null;
        }
        
        if(tkoJePozvao.equals("DatumPodizanja")){
            
            
            return odabrano.getDatumPodizanja();
        }else{
           
            return odabrano.getDatumVracanja();
        }
    }
}
*/